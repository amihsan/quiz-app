version: "3"

services:
  nginx:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend/nginx/certbot/conf:/etc/letsencrypt
      - ./frontend/nginx/certbot/www:/var/www/certbot
      - ./frontend/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend

  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    env_file:
      - ./backend/.env

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./frontend/nginx/certbot/conf:/etc/letsencrypt
      - ./frontend/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
# version: "3"

# services:
#   nginx:
#     restart: unless-stopped
#     build:
#       context: .
#       dockerfile: ./docker/nginx/Dockerfile
#     ports:
#       - 80:80
#       - 443:443
#     env_file:
#       - ./frontend/.env
#     volumes:
#       - ./docker/nginx/certbot/conf:/etc/letsencrypt
#       - ./docker/nginx/certbot/www:/var/www/certbot
#       - ./docker/nginx/templates:/etc/nginx/templates
#     depends_on:
#       - backend

#   backend:
#     restart: unless-stopped
#     build:
#       context: .
#       dockerfile: ./docker/backend/Dockerfile
#     ports:
#       - 5000:5000
#     env_file:
#       - ./backend/.env

#   certbot:
#     image: certbot/certbot
#     restart: unless-stopped
#     volumes:
#       - ./docker/nginx/certbot/conf:/etc/letsencrypt
#       - ./docker/nginx/certbot/www:/var/www/certbot
#     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
