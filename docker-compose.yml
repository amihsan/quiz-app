###################################################
###### For Lets Encrypt SSL certificate ###########
###################################################
services:
  nginx:
    restart: unless-stopped
    image: ${DOCKER_USERNAME}/quiz-frontend:latest
    ports:
      - 80:80
      - 443:443
    env_file:
      - ./frontend/.env

    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "nginx-logs" # Replace with your log group name
        awslogs-region: "eu-central-1" # Replace with your region
        awslogs-stream: "nginx-stream-${HOSTNAME}" # You can use a dynamic stream name like nginx-${HOSTNAME}

  backend:
    restart: unless-stopped
    image: ${DOCKER_USERNAME}/quiz-backend:latest
    ports:
      - 5000:5000
    env_file:
      - ./backend/.env
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "backend-logs" # Replace with your log group name
        awslogs-region: "eu-central-1" # Replace with your region
        awslogs-stream: "backend-stream-${HOSTNAME}" # You can use a dynamic stream name like backend-${HOSTNAME}

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "certbot-logs" # Replace with your log group name
        awslogs-region: "eu-central-1" # Replace with your region
        awslogs-stream: "certbot-stream-${HOSTNAME}" # You can use a dynamic stream name like certbot-${HOSTNAME}
# ####################################################
# ###### For using cloudfront & load balancer ########
# ####################################################
# services:
#   nginx:
#     restart: unless-stopped
#     image: ${DOCKER_USERNAME}/quiz-frontend:latest
#     ports:
#       - 80:80
#       - 443:443
#     env_file:
#       - ./frontend/.env
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

#     depends_on:
#       - backend

#   backend:
#     restart: unless-stopped
#     image: ${DOCKER_USERNAME}/quiz-backend:latest
#     ports:
#       - 5000:5000
#     env_file:
#       - ./backend/.env
