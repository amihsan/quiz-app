# Define the worker processes and events block
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Basic HTTP settings
    include       mime.types;
    default_type  application/octet-stream;

    # Enable gzip compression for better performance
    gzip on;
    gzip_types text/plain text/css application/javascript image/jpeg image/png image/gif application/font-woff2 application/font-woff application/vnd.ms-fontobject font/opentype;

    # Log settings
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # SSL settings (certificate files should already be mounted)
    server {
        listen 80;
        server_name lebentest.online www.lebentest.online;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # SSL server block
    server {
        listen 443 ssl;
        server_name lebentest.online www.lebentest.online;

        # SSL certificate locations
        ssl_certificate /etc/letsencrypt/live/lebentest.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/lebentest.online/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/letsencrypt/dhparam.pem;

        # For better security, enable HTTP Strict Transport Security (HSTS)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Redirect non-www to www (optional)
        if ($host = 'lebentest.online') {
            return 301 https://www.lebentest.online$request_uri;
        }

        # Proxy React frontend (static assets) from / to the Nginx static directory
        location / {
            try_files $uri /index.html;
        }

        # Proxy API requests to Flask backend
        location /api/ {
            proxy_pass http://backend:5000;  # The Flask service exposed on port 5000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error handling (optional)
        error_page 497 https://$host$request_uri;
    }
}
