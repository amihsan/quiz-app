name: CI/CD for Quiz App Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and Push Docker Images
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_USERNAME }}/quiz-frontend:latest -f docker/nginx/Dockerfile .
      #     docker push ${{ secrets.DOCKER_USERNAME }}/quiz-frontend:latest
      #     docker build -t ${{ secrets.DOCKER_USERNAME }}/quiz-backend:latest -f docker/backend/Dockerfile .
      #     docker push ${{ secrets.DOCKER_USERNAME }}/quiz-backend:latest

      - name: SSH into EC2 Instance and deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e  # Exit immediately if a command exits with a non-zero status

            # Update known_hosts to prevent SSH connection issues
            echo "Updating known_hosts..."
            ssh-keyscan -H ${{ secrets.EC2_HOST_DNS }} >> ~/.ssh/known_hosts

            # Remove existing Docker installation
            echo "Removing existing Docker installation..."
            sudo yum remove -y docker docker-ce docker-engine docker.io containerd runc
            sudo yum remove -y docker-ce docker-ce-cli
            sudo yum remove docker-ce docker-ce-cli containerd.io
            sudo rm -rf /var/lib/docker

            # Install Docker
            echo "Installing Docker..."
            sudo yum update -y
            sudo yum install -y docker
            sudo service docker start
            sudo usermod -a -G docker ${{ secrets.EC2_USERNAME }}
            sudo chmod 666 /var/run/docker.sock
            sudo systemctl enable docker
            docker version

            # Remove existing Docker Compose installation
            echo "Removing existing Docker Compose installation..."
            sudo rm /usr/local/bin/docker-compose

            # Install Docker Compose
            echo "Installing Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # Remove existing kubectl installation
            echo "Removing existing kubectl installation..."
            sudo rm /usr/local/bin/kubectl

            # Install kubectl
            echo "Installing kubectl..."
            sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

            # Remove existing Minikube installation
            echo "Removing existing Minikube installation..."
            sudo rm /usr/local/bin/minikube

            # Install Minikube
            echo "Installing Minikube..."
            sudo curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            sudo chmod +x minikube
            sudo mv minikube /usr/local/bin/

            # Start Minikube
            echo "Starting Minikube..."
            minikube start --driver=docker

            # Verify installation
            echo "kubectl version:"
            kubectl version --short
            echo "Minikube status:"
            minikube status
