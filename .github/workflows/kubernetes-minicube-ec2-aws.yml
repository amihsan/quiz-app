name: CI/CD for Quiz App

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/quiz-frontend:latest -f docker/nginx/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/quiz-frontend:latest
          docker build -t ${{ secrets.DOCKER_USERNAME }}/quiz-backend:latest -f docker/backend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/quiz-backend:latest

      - name: SSH into EC2 Instance and deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e  # Exit immediately if a command exits with a non-zero status

            # Update known_hosts to prevent SSH connection issues
            echo "Updating known_hosts..."
            ssh-keyscan -H ${{ secrets.EC2_HOST_DNS }} >> ~/.ssh/known_hosts

            # Check if Docker is installed
            if ! command -v docker &> /dev/null; then
                echo "Docker is not installed. Installing Docker..."
                sudo yum update -y
                sudo yum install -y docker
                sudo service docker start
                sudo usermod -aG docker ${{ secrets.EC2_USERNAME }}
            else
                echo "Docker is already installed."
            fi

            # Check if Docker Compose is installed, if not, install it
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            echo "Docker Compose version:"
            docker-compose version

            # Install kubectl
            sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

            # Install Minikube
            sudo curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            sudo chmod +x minikube
            sudo mv minikube /usr/local/bin/

            # Start Minikube
            minikube start --driver=docker

            # Verify installation
            kubectl version --short
            minikube status
