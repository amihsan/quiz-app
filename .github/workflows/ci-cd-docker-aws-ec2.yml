name: CI/CD for Quiz App

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and Push Docker Images
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_USERNAME }}/quiz-frontend:latest frontend/
      #     docker push ${{ secrets.DOCKER_USERNAME }}/quiz-frontend:latest
      #     docker build -t ${{ secrets.DOCKER_USERNAME }}/quiz-backend:latest backend/
      #     docker push ${{ secrets.DOCKER_USERNAME }}/quiz-backend:latest

      - name: SSH into EC2 Instance and deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e  # Exit immediately if a command exits with a non-zero status

            # Check if the target directory is already a git repository
            if [ -d "${{ secrets.EC2_TARGET_DIR }}/.git" ]; then
                # If the directory is a git repository, navigate to it
                cd ${{ secrets.EC2_TARGET_DIR }}
                
                # Stash any local changes
                echo "Stashing local changes..."
                git stash
                
                # Pull the latest changes from the main branch
                echo "Pulling latest changes..."
                git pull origin main
            else
                # If the directory is not a git repository, clone the repository
                echo "Cloning repository..."
                git clone https://github.com/amihsan/quiz-app.git ${{ secrets.EC2_TARGET_DIR }}
            fi

            # Update known_hosts to prevent SSH connection issues
            echo "Updating known_hosts..."
            ssh-keyscan -H ${{ secrets.EC2_HOST_DNS }} >> ~/.ssh/known_hosts

            # Check if Docker Compose is installed, if not, install it
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            echo "Docker Compose version:"
            docker-compose version

            # Check if Docker is installed, if not, install it
            if ! command -v docker &> /dev/null; then
              echo "Docker is not installed. Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -a -G docker $USER
              sudo chkconfig docker on
            else
              echo "Docker is already installed."
            fi


            # Deploy containers using Docker Compose
            echo "Deploying containers with Docker Compose..."

            # docker-compose -f ${{ secrets.EC2_TARGET_DIR }}/docker-compose.yml down 

            # docker-compose -f ${{ secrets.EC2_TARGET_DIR }}/docker-compose.yml up --build -d

            docker-compose down
            sudo docker-compose build
            chmod +x ./docker/init-letsencrypt.sh
            sudo ./docker/init-letsencrypt.sh 
            sudo docker-compose down
            sudo docker-compose up -d
            docker ps -a
